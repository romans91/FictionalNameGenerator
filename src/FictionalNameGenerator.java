import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

/*
        Parses .csv files into string arrays and creates words, randomly using the elements as syllables
 */
public class FictionalNameGenerator {
    // Contains the base syllables from which words are built
    // This file must be in the folder for this generator to work, can be generated by the web scraper
    public static final String SYLLABLES_FROM_WEBSITE_FILENAME = "SyllablesFromDictionary.csv";

    // A syllable from this file has a variable chance to be used instead of a syllable from SyllablesFromDictionary.csv
    // This file is optional
    public static final String SYLLABLES_OCCASIONAL_FILENAME = "SyllablesOccasional.csv";

    // One random syllable from this file will always appear in the output word
    // This file is optional
    public static final String SYLLABLES_MANDATORY_FILENAME = "SyllablesMandatory.csv";



    private static List<String> getSyllablesFromCsv(String filename) {
        List<String> syllables = new ArrayList<>();

        try {

            if (new File(filename).exists()) {
                Scanner scanner = new Scanner(new File(filename));
                scanner.useDelimiter(",\n");

                while (scanner.hasNext()) {
                    String s = scanner.next();
                    syllables.add(s);
                }
                scanner.close();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return syllables;
    }

    public static List<String> generateNames(int numberOfWords, int minSyllables, int maxSyllables, float occasionalSyllableFrequency)  {
        //occasionalSyllableFrequency = Math.max(0.0f, Math.min(1.0f, occasionalSyllableFrequency));
        List<String> wordsOut = new ArrayList<String>();
        List<String> syllables = getSyllablesFromCsv(SYLLABLES_FROM_WEBSITE_FILENAME);
        List<String> occasionalSyllables = getSyllablesFromCsv(SYLLABLES_OCCASIONAL_FILENAME);
        List<String> mandatorySyllables = getSyllablesFromCsv(SYLLABLES_MANDATORY_FILENAME);

        for (int i = 0; i < numberOfWords; i++) {
            int syllablesCount = minSyllables + (int) (Math.random() * (maxSyllables - minSyllables));
            int customSyllableLocation = (int) (Math.random() * syllablesCount);
            String word = "";

            for (int j = 0; j < syllablesCount; j++) {
                float occasionalSyllableOdds = (float)Math.random();


                if (j == customSyllableLocation && mandatorySyllables.size() > 0) {
                    word += mandatorySyllables.get((int) (Math.random() * (mandatorySyllables.size())));
                } else if (occasionalSyllableOdds < occasionalSyllableFrequency && occasionalSyllables.size() > 0) {
                    word += occasionalSyllables.get((int) (Math.random() * occasionalSyllables.size()));
                } else {
                    word += syllables.get((int) (Math.random() * syllables.size()));
                }
            }
            wordsOut.add(word);
        }
        return wordsOut;
    }
}
